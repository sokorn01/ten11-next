{"ast":null,"code":"var _jsxFileName = \"/Users/sosokorn/Documents/Project/ten11-web-reactjs-nextjs/pages/[slug].js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { wrapper, State } from \"../store/store\";\nimport { useRouter } from \"next/router\";\nimport \"./productList.css\";\nimport Layout from \"../components/layouts/Layout\";\nimport Container from \"../components/Containers/Container\";\nimport \"antd/dist/antd.css\";\nimport ProductItem from \"../components/Products/ProductItem\";\nimport useSticky from \"../shared/hooks/useSticky\";\nimport ProductListLoading from \"../components/Loading/ProductListLoading\";\nimport ListSideBarMenu from \"../components/Products/ListSideBarMenu\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { FiRefreshCw } from \"react-icons/fi\";\nimport { serviceApiFormData } from \"../shared/hooks/seviceApi\";\nimport { getMetaData } from \"../store/actions/metaDataAction\";\nimport { fetchMenu } from \"../store/actions/menuAction\";\n\nconst ProductList = props => {\n  console.log(props);\n  const router = useRouter();\n  const {\n    page,\n    id,\n    slug\n  } = router.query;\n  const {\n    hideNav\n  } = useSticky;\n  const {\n    0: hasMore,\n    1: setHasMore\n  } = useState(true);\n  const {\n    0: listProduct,\n    1: setListProduct\n  } = useState([]);\n  useEffect(() => {\n    if (props.props.product !== undefined && props.props.product.list !== undefined) {\n      if (Number(page) === 1) {\n        setListProduct(props.props.product.list);\n        localStorage.setItem(\"totalproduct\", props.props.product.total_record);\n      } else if (Number(page) > 1) {\n        setListProduct([...listProduct, ...props.props.product.list]);\n      }\n    }\n  }, [props.props.product]);\n\n  function onChange(e) {\n    console.log(`checked = ${e.target.checked}`);\n  }\n\n  const loadItems = () => {\n    const totalProduct = localStorage.getItem(\"totalproduct\");\n    if (listProduct.length > 0) if (listProduct.length < Number(totalProduct)) {\n      setHasMore(true);\n      router.push(`/product/${slug}/?id=${id}&&page=${Number(page) + 1}`);\n    } else {\n      setHasMore(false);\n    }\n  };\n\n  const refresh = () => {};\n\n  const loader = __jsx(\"div\", {\n    className: \"load-more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"load-more-block\",\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(FiRefreshCw, {\n    className: `${hasMore ? \"load-more-icon\" : \"no-load-more\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Load more...\"))); // if (props.isLoading) return <ProductListLoading />;\n  // if (router.isFallback) {\n  //   return <ProductListLoading />;\n  // }\n\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, __jsx(Layout, {\n    menu: [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, __jsx(ListSideBarMenu // mainCategory={slug[0]}\n  // paramsId={paramsId}\n  // category_name={slug[0]}\n  , {\n    hideNav: hideNav,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, __jsx(InfiniteScroll, {\n    className: \"rowChild\",\n    dataLength: listProduct.length || 0,\n    next: loadItems,\n    hasMore: hasMore,\n    loader: loader,\n    refreshFunction: refresh,\n    pullDownToRefresh: true,\n    pullDownToRefreshThreshold: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, listProduct.map((item, index) => __jsx(ProductItem, _extends({\n    key: index\n  }, item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  })))))))));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const Metadata = context.store.getState().metadata.metaData;\n  console.log(Metadata); // const token = context.store.getState().authentication.token;\n\n  return {\n    props: {\n      product: [],\n      menu: []\n    }\n  };\n}); // ProductList.getInitialProps = ({ store, pathname, query }) => {\n//   console.log(store);\n//   console.log(pathname);\n//   console.log(query);\n//   store.dispatch({ type: \"GET_META_DATA\", payload: \"was set in error page \" });\n//   const { page, id } = context.query;\n//   try {\n//     const api = serviceApiFormData();\n//     const res = await api.post(\"MenuApp/getMenu\");\n//     const menu = res.data;\n//     const data = {\n//       page: page,\n//       category_id: id,\n//     };\n//     const productList = await api.post(\"ListProduct/getProductList\", data);\n//     const product = productList.data;\n//     return {\n//       props: {\n//         product: [],\n//         menu: [],\n//       },\n//     };\n//   } catch {\n//     return {\n//       props: {\n//         product: {},\n//         menu: {},\n//       },\n//     };\n//   }\n// };\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getMetaData: param => dispatch(getMetaData(param)),\n    getMenu: param => dispatch(fetchMenu())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ProductList);","map":{"version":3,"sources":["/Users/sosokorn/Documents/Project/ten11-web-reactjs-nextjs/pages/[slug].js"],"names":["React","useEffect","useState","connect","wrapper","State","useRouter","Layout","Container","ProductItem","useSticky","ProductListLoading","ListSideBarMenu","InfiniteScroll","FiRefreshCw","serviceApiFormData","getMetaData","fetchMenu","ProductList","props","console","log","router","page","id","slug","query","hideNav","hasMore","setHasMore","listProduct","setListProduct","product","undefined","list","Number","localStorage","setItem","total_record","onChange","e","target","checked","loadItems","totalProduct","getItem","length","push","refresh","loader","onClick","map","item","index","getServerSideProps","context","Metadata","store","getState","metadata","metaData","menu","mapDispatchToProps","dispatch","param","getMenu"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,gBAA/B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAO,mBAAP;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,kBAAP,MAA+B,0CAA/B;AACA,OAAOC,eAAP,MAA4B,wCAA5B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,SAAT,QAA0B,6BAA1B;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,MAAM,GAAGhB,SAAS,EAAxB;AACA,QAAM;AAAEiB,IAAAA,IAAF;AAAQC,IAAAA,EAAR;AAAYC,IAAAA;AAAZ,MAAqBH,MAAM,CAACI,KAAlC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcjB,SAApB;AACA,QAAM;AAAA,OAACkB,OAAD;AAAA,OAAUC;AAAV,MAAwB3B,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAA,OAAC4B,WAAD;AAAA,OAAcC;AAAd,MAAgC7B,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QACEkB,KAAK,CAACA,KAAN,CAAYa,OAAZ,KAAwBC,SAAxB,IACAd,KAAK,CAACA,KAAN,CAAYa,OAAZ,CAAoBE,IAApB,KAA6BD,SAF/B,EAGE;AACA,UAAIE,MAAM,CAACZ,IAAD,CAAN,KAAiB,CAArB,EAAwB;AACtBQ,QAAAA,cAAc,CAACZ,KAAK,CAACA,KAAN,CAAYa,OAAZ,CAAoBE,IAArB,CAAd;AACAE,QAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqClB,KAAK,CAACA,KAAN,CAAYa,OAAZ,CAAoBM,YAAzD;AACD,OAHD,MAGO,IAAIH,MAAM,CAACZ,IAAD,CAAN,GAAe,CAAnB,EAAsB;AAC3BQ,QAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiB,GAAGX,KAAK,CAACA,KAAN,CAAYa,OAAZ,CAAoBE,IAAxC,CAAD,CAAd;AACD;AACF;AACF,GAZQ,EAYN,CAACf,KAAK,CAACA,KAAN,CAAYa,OAAb,CAZM,CAAT;;AAcA,WAASO,QAAT,CAAkBC,CAAlB,EAAqB;AACnBpB,IAAAA,OAAO,CAACC,GAAR,CAAa,aAAYmB,CAAC,CAACC,MAAF,CAASC,OAAQ,EAA1C;AACD;;AAED,QAAMC,SAAS,GAAG,MAAM;AACtB,UAAMC,YAAY,GAAGR,YAAY,CAACS,OAAb,CAAqB,cAArB,CAArB;AACA,QAAIf,WAAW,CAACgB,MAAZ,GAAqB,CAAzB,EACE,IAAIhB,WAAW,CAACgB,MAAZ,GAAqBX,MAAM,CAACS,YAAD,CAA/B,EAA+C;AAC7Cf,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAP,MAAAA,MAAM,CAACyB,IAAP,CAAa,YAAWtB,IAAK,QAAOD,EAAG,UAASW,MAAM,CAACZ,IAAD,CAAN,GAAe,CAAE,EAAjE;AACD,KAHD,MAGO;AACLM,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACJ,GATD;;AAWA,QAAMmB,OAAO,GAAG,MAAM,CAAE,CAAxB;;AACA,QAAMC,MAAM,GACV;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,OAAO,EAAE9B,KAAK,CAAC+B,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,SAAS,EAAG,GAAEtB,OAAO,GAAG,gBAAH,GAAsB,cAAe,EAD5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,CADF,CADF,CAtC6B,CAiD7B;AACA;AACA;AACA;;;AACA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD,CACE;AACA;AACA;AAHF;AAIE,IAAA,OAAO,EAAED,OAJX;AAKE,IAAA,QAAQ,EAAEY,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,UAAU,EAAET,WAAW,CAACgB,MAAZ,IAAsB,CAFpC;AAGE,IAAA,IAAI,EAAEH,SAHR;AAIE,IAAA,OAAO,EAAEf,OAJX;AAKE,IAAA,MAAM,EAAEqB,MALV;AAME,IAAA,eAAe,EAAED,OANnB;AAOE,IAAA,iBAAiB,MAPnB;AAQE,IAAA,0BAA0B,EAAE,EAR9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGlB,WAAW,CAACqB,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KACf,MAAC,WAAD;AAAa,IAAA,GAAG,EAAEA;AAAlB,KAA6BD,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CAVH,CADF,CARF,CADF,CADF,CADF,CADF;AAiCD,CAtFD;;AAwFA,OAAO,MAAME,kBAAkB,GAAGlD,OAAO,CAACkD,kBAAR,CAChC,MAAOC,OAAP,IAAmB;AACjB,QAAMC,QAAQ,GAAGD,OAAO,CAACE,KAAR,CAAcC,QAAd,GAAyBC,QAAzB,CAAkCC,QAAnD;AACAxC,EAAAA,OAAO,CAACC,GAAR,CAAYmC,QAAZ,EAFiB,CAGjB;;AACA,SAAO;AACLrC,IAAAA,KAAK,EAAE;AACLa,MAAAA,OAAO,EAAE,EADJ;AAEL6B,MAAAA,IAAI,EAAE;AAFD;AADF,GAAP;AAMD,CAX+B,CAA3B,C,CAcP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL/C,IAAAA,WAAW,EAAGgD,KAAD,IAAWD,QAAQ,CAAC/C,WAAW,CAACgD,KAAD,CAAZ,CAD3B;AAELC,IAAAA,OAAO,EAAGD,KAAD,IAAWD,QAAQ,CAAC9C,SAAS,EAAV;AAFvB,GAAP;AAID,CALD;;AAOA,eAAed,OAAO,CAAC,IAAD,EAAO2D,kBAAP,CAAP,CAAkC5C,WAAlC,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { wrapper, State } from \"../store/store\";\nimport { useRouter } from \"next/router\";\nimport \"./productList.css\";\nimport Layout from \"../components/layouts/Layout\";\nimport Container from \"../components/Containers/Container\";\nimport \"antd/dist/antd.css\";\nimport ProductItem from \"../components/Products/ProductItem\";\nimport useSticky from \"../shared/hooks/useSticky\";\nimport ProductListLoading from \"../components/Loading/ProductListLoading\";\nimport ListSideBarMenu from \"../components/Products/ListSideBarMenu\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { FiRefreshCw } from \"react-icons/fi\";\nimport { serviceApiFormData } from \"../shared/hooks/seviceApi\";\nimport { getMetaData } from \"../store/actions/metaDataAction\";\nimport { fetchMenu } from \"../store/actions/menuAction\";\n\nconst ProductList = (props) => {\n  console.log(props);\n  const router = useRouter();\n  const { page, id, slug } = router.query;\n  const { hideNav } = useSticky;\n  const [hasMore, setHasMore] = useState(true);\n  const [listProduct, setListProduct] = useState([]);\n\n  useEffect(() => {\n    if (\n      props.props.product !== undefined &&\n      props.props.product.list !== undefined\n    ) {\n      if (Number(page) === 1) {\n        setListProduct(props.props.product.list);\n        localStorage.setItem(\"totalproduct\", props.props.product.total_record);\n      } else if (Number(page) > 1) {\n        setListProduct([...listProduct, ...props.props.product.list]);\n      }\n    }\n  }, [props.props.product]);\n\n  function onChange(e) {\n    console.log(`checked = ${e.target.checked}`);\n  }\n\n  const loadItems = () => {\n    const totalProduct = localStorage.getItem(\"totalproduct\");\n    if (listProduct.length > 0)\n      if (listProduct.length < Number(totalProduct)) {\n        setHasMore(true);\n        router.push(`/product/${slug}/?id=${id}&&page=${Number(page) + 1}`);\n      } else {\n        setHasMore(false);\n      }\n  };\n\n  const refresh = () => {};\n  const loader = (\n    <div className=\"load-more\">\n      <div className=\"load-more-block\" onClick={props.onClick}>\n        <FiRefreshCw\n          className={`${hasMore ? \"load-more-icon\" : \"no-load-more\"}`}\n        />\n        <span>Load more...</span>\n      </div>\n    </div>\n  );\n\n  // if (props.isLoading) return <ProductListLoading />;\n  // if (router.isFallback) {\n  //   return <ProductListLoading />;\n  // }\n  return (\n    <React.Fragment>\n      <Layout menu={[]}>\n        <Container>\n          <div className=\"row\">\n            <ListSideBarMenu\n              // mainCategory={slug[0]}\n              // paramsId={paramsId}\n              // category_name={slug[0]}\n              hideNav={hideNav}\n              onChange={onChange}\n            />\n            <div className=\"main\">\n              <InfiniteScroll\n                className=\"rowChild\"\n                dataLength={listProduct.length || 0}\n                next={loadItems}\n                hasMore={hasMore}\n                loader={loader}\n                refreshFunction={refresh}\n                pullDownToRefresh\n                pullDownToRefreshThreshold={50}\n              >\n                {listProduct.map((item, index) => (\n                  <ProductItem key={index} {...item} />\n                ))}\n              </InfiniteScroll>\n            </div>\n          </div>\n        </Container>\n      </Layout>\n    </React.Fragment>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    const Metadata = context.store.getState().metadata.metaData;\n    console.log(Metadata);\n    // const token = context.store.getState().authentication.token;\n    return {\n      props: {\n        product: [],\n        menu: [],\n      },\n    };\n  }\n);\n\n// ProductList.getInitialProps = ({ store, pathname, query }) => {\n//   console.log(store);\n//   console.log(pathname);\n//   console.log(query);\n//   store.dispatch({ type: \"GET_META_DATA\", payload: \"was set in error page \" });\n//   const { page, id } = context.query;\n//   try {\n//     const api = serviceApiFormData();\n//     const res = await api.post(\"MenuApp/getMenu\");\n//     const menu = res.data;\n//     const data = {\n//       page: page,\n//       category_id: id,\n//     };\n//     const productList = await api.post(\"ListProduct/getProductList\", data);\n//     const product = productList.data;\n//     return {\n//       props: {\n//         product: [],\n//         menu: [],\n//       },\n//     };\n//   } catch {\n//     return {\n//       props: {\n//         product: {},\n//         menu: {},\n//       },\n//     };\n//   }\n// };\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getMetaData: (param) => dispatch(getMetaData(param)),\n    getMenu: (param) => dispatch(fetchMenu()),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ProductList);\n"]},"metadata":{},"sourceType":"module"}