{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport \"../productList.css\";\nimport Layout from \"../../components/layouts/Layout\";\nimport Container from \"../../components/Containers/Container\";\nimport \"antd/dist/antd.css\";\nimport ProductItem from \"../../components/Products/ProductItem\";\nimport useSticky from \"../../shared/hooks/useSticky\";\nimport ProductListLoading from \"../../components/Loading/ProductListLoading\";\nimport ListSideBarMenu from \"../../components/Products/ListSideBarMenu\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { FiRefreshCw } from \"react-icons/fi\";\nimport { serviceApiFormData } from \"../../shared/hooks/seviceApi\";\n\nconst ProductList = props => {\n  const router = useRouter();\n  const {\n    page,\n    id,\n    slug\n  } = router.query;\n  const {\n    hideNav\n  } = useSticky;\n  const {\n    0: hasMore,\n    1: setHasMore\n  } = useState(true);\n  const {\n    0: listProduct,\n    1: setListProduct\n  } = useState([]); // useEffect(() => {\n  //   if (\n  //     props.props.product !== undefined &&\n  //     props.props.product.list !== undefined\n  //   ) {\n  //     if (Number(page) === 1) {\n  //       setListProduct(props.props.product.list);\n  //       localStorage.setItem(\"totalproduct\", props.props.product.total_record);\n  //     } else if (Number(page) > 1) {\n  //       setListProduct([...listProduct, ...props.props.product.list]);\n  //     }\n  //   }\n  // }, [props.props.product]);\n\n  function onChange(e) {\n    console.log(`checked = ${e.target.checked}`);\n  }\n\n  const loadItems = () => {\n    const totalProduct = localStorage.getItem(\"totalproduct\");\n    if (listProduct.length > 0) if (listProduct.length < Number(totalProduct)) {\n      setHasMore(true);\n      router.push(`/product/${slug}/?id=${id}&&page=${Number(page) + 1}`);\n    } else {\n      setHasMore(false);\n    }\n  };\n\n  const refresh = () => {};\n\n  const loader = __jsx(\"div\", {\n    className: \"load-more\"\n  }, __jsx(\"div\", {\n    className: \"load-more-block\",\n    onClick: props.onClick\n  }, __jsx(FiRefreshCw, {\n    className: `${hasMore ? \"load-more-icon\" : \"no-load-more\"}`\n  }), __jsx(\"span\", null, \"Load more...\"))); // if (props.isLoading) return <ProductListLoading />;\n\n\n  if (router.isFallback) {\n    return __jsx(ProductListLoading, null);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Container, null, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(ListSideBarMenu // mainCategory={slug[0]}\n  // paramsId={paramsId}\n  // category_name={slug[0]}\n  , {\n    hideNav: hideNav,\n    onChange: onChange\n  }), __jsx(\"div\", {\n    className: \"main\"\n  }))));\n};\n\nexport async function getStaticPaths() {\n  const api = serviceApiFormData();\n  const res = await api.post(\"MenuApp/getMenu\");\n  const paths = res.data.menu.map(a => ({\n    params: {\n      id: a.category_id.toString()\n    }\n  }));\n  return {\n    // paths: [{ params: { slug: \"1\" } }],\n    paths,\n    fallback: true\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  console.log(params); // const api = serviceApiFormData();\n  // const res = await api.post(\"MenuApp/getMenu\");\n  // const menu = res.data;\n  // const data = {\n  //   page: page,\n  //   category_id: id,\n  // };\n  // const productList = await api.post(\"ListProduct/getProductList\", data);\n  // const product = productList.data;\n\n  return {\n    props: {// menu,\n      // product,\n    }\n  };\n} // ProductList.getInitialProps = async (context) => {\n//   const { page, id } = context.query;\n//   try {\n//     const api = serviceApiFormData();\n//     const res = await api.post(\"MenuApp/getMenu\");\n//     const menu = res.data;\n//     const data = {\n//       page: page,\n//       category_id: id,\n//     };\n//     const productList = await api.post(\"ListProduct/getProductList\", data);\n//     const product = productList.data;\n//     return {\n//       props: {\n//         product,\n//         menu,\n//       },\n//     };\n//   } catch {\n//     return {\n//       props: {\n//         product: {},\n//         menu: {},\n//       },\n//     };\n//   }\n// };\n\nexport default ProductList;","map":null,"metadata":{},"sourceType":"module"}