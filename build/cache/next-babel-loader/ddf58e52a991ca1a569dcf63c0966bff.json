{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport \"../productList.css\";\nimport Layout from \"../../components/layouts/Layout\";\nimport Container from \"../../components/Containers/Container\";\nimport \"antd/dist/antd.css\";\nimport ProductItem from \"../../components/Products/ProductItem\";\nimport useSticky from \"../../shared/hooks/useSticky\";\nimport ProductListLoading from \"../../components/Loading/ProductListLoading\";\nimport ListSideBarMenu from \"../../components/Products/ListSideBarMenu\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { FiRefreshCw } from \"react-icons/fi\";\nimport { serviceApiFormData } from \"../../shared/hooks/seviceApi\";\n\nvar ProductList = function ProductList(props) {\n  var router = useRouter();\n  var _router$query = router.query,\n      page = _router$query.page,\n      id = _router$query.id,\n      slug = _router$query.slug;\n  var hideNav = useSticky.hideNav;\n\n  var _useState = useState(true),\n      hasMore = _useState[0],\n      setHasMore = _useState[1];\n\n  var _useState2 = useState([]),\n      listProduct = _useState2[0],\n      setListProduct = _useState2[1];\n\n  useEffect(function () {\n    if (props.props.product !== undefined && props.props.product.list !== undefined) {\n      if (Number(page) === 1) {\n        setListProduct(props.props.product.list);\n        localStorage.setItem(\"totalproduct\", props.props.product.total_record);\n      } else if (Number(page) > 1) {\n        setListProduct([].concat(_toConsumableArray(listProduct), _toConsumableArray(props.props.product.list)));\n      }\n    }\n  }, [props.props.product]);\n\n  function onChange(e) {\n    console.log(\"checked = \".concat(e.target.checked));\n  }\n\n  var loadItems = function loadItems() {\n    var totalProduct = localStorage.getItem(\"totalproduct\");\n    if (listProduct.length > 0) if (listProduct.length < Number(totalProduct)) {\n      setHasMore(true);\n      router.push(\"/product/\".concat(slug, \"/?id=\").concat(id, \"&&page=\").concat(Number(page) + 1));\n    } else {\n      setHasMore(false);\n    }\n  };\n\n  var refresh = function refresh() {};\n\n  var loader = __jsx(\"div\", {\n    className: \"load-more\"\n  }, __jsx(\"div\", {\n    className: \"load-more-block\",\n    onClick: props.onClick\n  }, __jsx(FiRefreshCw, {\n    className: \"\".concat(hasMore ? \"load-more-icon\" : \"no-load-more\")\n  }), __jsx(\"span\", null, \"Load more...\"))); // if (props.isLoading) return <ProductListLoading />;\n\n\n  if (router.isFallback) {\n    return __jsx(ProductListLoading, null);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    menu: props.props.menu.menu\n  }, __jsx(Container, null, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(ListSideBarMenu // mainCategory={slug[0]}\n  // paramsId={paramsId}\n  , {\n    category_name: slug[0],\n    hideNav: hideNav,\n    onChange: onChange\n  }), __jsx(\"div\", {\n    className: \"main\"\n  }, __jsx(InfiniteScroll, {\n    className: \"rowChild\",\n    dataLength: listProduct.length || 0,\n    next: loadItems,\n    hasMore: hasMore,\n    loader: loader,\n    refreshFunction: refresh,\n    pullDownToRefresh: true,\n    pullDownToRefreshThreshold: 50\n  }, listProduct.map(function (item, index) {\n    return __jsx(ProductItem, _extends({\n      key: index\n    }, item));\n  })))))));\n}; // export async function getStaticPaths() {\n//   const api = serviceApiFormData();\n//   const res = await api.post(\"MenuApp/getMenu\");\n//   const paths = res.data.menu.map((a) => {\n//     return {\n//       params: { id: a.category_id.toString() },\n//     };\n//   });\n//   return {\n//     fallback: true,\n//     paths,\n//   };\n// }\n// export async function getStaticProps(ctx) {\n//   console.log(ctx);\n//   const api = serviceApiFormData();\n//   const res = await api.post(\"MenuApp/getMenu\");\n//   const menu = res.data;\n//   const data = {\n//     page: page,\n//     category_id: id,\n//   };\n//   const productList = await api.post(\"ListProduct/getProductList\", data);\n//   const product = productList.data;\n//   return {\n//     props: {\n//       menu,\n//       product,\n//     },\n//   };\n// }\n\n\nProductList.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var _context$query, page, id, api, res, menu, data, productList, product;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context$query = context.query, page = _context$query.page, id = _context$query.id;\n            _context.prev = 1;\n            api = serviceApiFormData();\n            _context.next = 5;\n            return api.post(\"MenuApp/getMenu\");\n\n          case 5:\n            res = _context.sent;\n            menu = res.data;\n            data = {\n              page: page,\n              category_id: id\n            };\n            _context.next = 10;\n            return api.post(\"ListProduct/getProductList\", data);\n\n          case 10:\n            productList = _context.sent;\n            product = productList.data;\n            return _context.abrupt(\"return\", {\n              props: {\n                product: product,\n                menu: menu\n              }\n            });\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", {\n              props: {\n                product: {},\n                menu: {}\n              }\n            });\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 15]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default ProductList;","map":null,"metadata":{},"sourceType":"module"}