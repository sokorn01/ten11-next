{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/sosokorn/Documents/Project/ten11-web-reactjs-nextjs/pages/product/[slug].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport \"../productList.css\";\nimport Layout from \"../../components/layouts/Layout\";\nimport Container from \"../../components/Containers/Container\";\nimport \"antd/dist/antd.css\";\nimport ProductItem from \"../../components/Products/ProductItem\";\nimport useSticky from \"../../shared/hooks/useSticky\";\nimport ProductListLoading from \"../../components/Loading/ProductListLoading\";\nimport ListSideBarMenu from \"../../components/Products/ListSideBarMenu\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { FiRefreshCw } from \"react-icons/fi\";\n\nvar ProductList = function ProductList(props) {\n  _s();\n\n  var router = useRouter();\n  var _router$query = router.query,\n      page = _router$query.page,\n      id = _router$query.id,\n      slug = _router$query.slug;\n  var hideNav = useSticky.hideNav;\n\n  var _useState = useState(true),\n      hasMore = _useState[0],\n      setHasMore = _useState[1];\n\n  var _useState2 = useState([]),\n      listProduct = _useState2[0],\n      setListProduct = _useState2[1]; // useEffect(() => {\n  //   if (\n  //     props.props.product !== undefined &&\n  //     props.props.product.list !== undefined\n  //   ) {\n  //     if (Number(page) === 1) {\n  //       setListProduct(props.props.product.list);\n  //       localStorage.setItem(\"totalproduct\", props.props.product.total_record);\n  //     } else if (Number(page) > 1) {\n  //       setListProduct([...listProduct, ...props.props.product.list]);\n  //     }\n  //   }\n  // }, [props.props.product]);\n\n\n  function onChange(e) {\n    console.log(\"checked = \".concat(e.target.checked));\n  }\n\n  var loadItems = function loadItems() {\n    var totalProduct = localStorage.getItem(\"totalproduct\");\n    if (listProduct.length > 0) if (listProduct.length < Number(totalProduct)) {\n      setHasMore(true);\n      router.push(\"/product/\".concat(slug, \"/?id=\").concat(id, \"&&page=\").concat(Number(page) + 1));\n    } else {\n      setHasMore(false);\n    }\n  };\n\n  var refresh = function refresh() {};\n\n  var loader = __jsx(\"div\", {\n    className: \"load-more\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"load-more-block\",\n    onClick: props.onClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(FiRefreshCw, {\n    className: \"\".concat(hasMore ? \"load-more-icon\" : \"no-load-more\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Load more...\"))); // if (props.isLoading) return <ProductListLoading />;\n\n\n  if (router.isFallback) {\n    return __jsx(ProductListLoading, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(ListSideBarMenu // mainCategory={slug[0]}\n  // paramsId={paramsId}\n  , {\n    category_name: slug[0],\n    hideNav: hideNav,\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: \"main\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(ProductList, \"WHLaPLdgDpkEdiJaRxMubf8J38w=\", false, function () {\n  return [useRouter];\n});\n\n_c = ProductList;\n// ProductList.getInitialProps = async (context) => {\n//   const { page, id } = context.query;\n//   try {\n//     const api = serviceApiFormData();\n//     const res = await api.post(\"MenuApp/getMenu\");\n//     const menu = res.data;\n//     const data = {\n//       page: page,\n//       category_id: id,\n//     };\n//     const productList = await api.post(\"ListProduct/getProductList\", data);\n//     const product = productList.data;\n//     return {\n//       props: {\n//         product,\n//         menu,\n//       },\n//     };\n//   } catch {\n//     return {\n//       props: {\n//         product: {},\n//         menu: {},\n//       },\n//     };\n//   }\n// };\nexport var __N_SSG = true;\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/Users/sosokorn/Documents/Project/ten11-web-reactjs-nextjs/pages/product/[slug].js"],"names":["React","useEffect","useState","useRouter","Layout","Container","ProductItem","useSticky","ProductListLoading","ListSideBarMenu","InfiniteScroll","FiRefreshCw","ProductList","props","router","query","page","id","slug","hideNav","hasMore","setHasMore","listProduct","setListProduct","onChange","e","console","log","target","checked","loadItems","totalProduct","localStorage","getItem","length","Number","push","refresh","loader","onClick","isFallback"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport \"../productList.css\";\nimport Layout from \"../../components/layouts/Layout\";\nimport Container from \"../../components/Containers/Container\";\nimport \"antd/dist/antd.css\";\nimport ProductItem from \"../../components/Products/ProductItem\";\nimport useSticky from \"../../shared/hooks/useSticky\";\nimport ProductListLoading from \"../../components/Loading/ProductListLoading\";\nimport ListSideBarMenu from \"../../components/Products/ListSideBarMenu\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { FiRefreshCw } from \"react-icons/fi\";\nimport { serviceApiFormData } from \"../../shared/hooks/seviceApi\";\n\nconst ProductList = (props) => {\n  const router = useRouter();\n  const { page, id, slug } = router.query;\n  const { hideNav } = useSticky;\n  const [hasMore, setHasMore] = useState(true);\n  const [listProduct, setListProduct] = useState([]);\n\n  // useEffect(() => {\n  //   if (\n  //     props.props.product !== undefined &&\n  //     props.props.product.list !== undefined\n  //   ) {\n  //     if (Number(page) === 1) {\n  //       setListProduct(props.props.product.list);\n  //       localStorage.setItem(\"totalproduct\", props.props.product.total_record);\n  //     } else if (Number(page) > 1) {\n  //       setListProduct([...listProduct, ...props.props.product.list]);\n  //     }\n  //   }\n  // }, [props.props.product]);\n\n  function onChange(e) {\n    console.log(`checked = ${e.target.checked}`);\n  }\n\n  const loadItems = () => {\n    const totalProduct = localStorage.getItem(\"totalproduct\");\n    if (listProduct.length > 0)\n      if (listProduct.length < Number(totalProduct)) {\n        setHasMore(true);\n        router.push(`/product/${slug}/?id=${id}&&page=${Number(page) + 1}`);\n      } else {\n        setHasMore(false);\n      }\n  };\n\n  const refresh = () => {};\n  const loader = (\n    <div className=\"load-more\">\n      <div className=\"load-more-block\" onClick={props.onClick}>\n        <FiRefreshCw\n          className={`${hasMore ? \"load-more-icon\" : \"no-load-more\"}`}\n        />\n        <span>Load more...</span>\n      </div>\n    </div>\n  );\n\n  // if (props.isLoading) return <ProductListLoading />;\n  if (router.isFallback) {\n    return <ProductListLoading />;\n  }\n  return (\n    <React.Fragment>\n      {/* <Layout menu={props.props.menu.menu}> */}\n      <Container>\n        <div className=\"row\">\n          <ListSideBarMenu\n            // mainCategory={slug[0]}\n            // paramsId={paramsId}\n            category_name={slug[0]}\n            hideNav={hideNav}\n            onChange={onChange}\n          />\n          <div className=\"main\">\n            {/* <InfiniteScroll\n                className=\"rowChild\"\n                dataLength={listProduct.length || 0}\n                next={loadItems}\n                hasMore={hasMore}\n                loader={loader}\n                refreshFunction={refresh}\n                pullDownToRefresh\n                pullDownToRefreshThreshold={50}\n              >\n                {listProduct.map((item, index) => (\n                  <ProductItem key={index} {...item} />\n                ))}\n              </InfiniteScroll> */}\n          </div>\n        </div>\n      </Container>\n      {/* </Layout> */}\n    </React.Fragment>\n  );\n};\n\nexport async function getStaticPaths() {\n  const api = serviceApiFormData();\n  const res = await api.post(\"MenuApp/getMenu\");\n  const paths = res.data.menu.map((a) => ({\n    params: { slug: a.category_id.toString() },\n  }));\n  return {\n    // paths: [{ params: { slug: \"1\" } }],\n    paths,\n    fallback: true,\n  };\n}\n\nexport async function getStaticProps({ params }) {\n  console.log(params);\n  // const api = serviceApiFormData();\n  // const res = await api.post(\"MenuApp/getMenu\");\n  // const menu = res.data;\n  // const data = {\n  //   page: page,\n  //   category_id: id,\n  // };\n  // const productList = await api.post(\"ListProduct/getProductList\", data);\n  // const product = productList.data;\n  return {\n    props: {\n      // menu,\n      // product,\n    },\n  };\n}\n\n// ProductList.getInitialProps = async (context) => {\n//   const { page, id } = context.query;\n//   try {\n//     const api = serviceApiFormData();\n//     const res = await api.post(\"MenuApp/getMenu\");\n//     const menu = res.data;\n//     const data = {\n//       page: page,\n//       category_id: id,\n//     };\n//     const productList = await api.post(\"ListProduct/getProductList\", data);\n//     const product = productList.data;\n//     return {\n//       props: {\n//         product,\n//         menu,\n//       },\n//     };\n//   } catch {\n//     return {\n//       props: {\n//         product: {},\n//         menu: {},\n//       },\n//     };\n//   }\n// };\n\nexport default ProductList;\n"]},"metadata":{},"sourceType":"module"}